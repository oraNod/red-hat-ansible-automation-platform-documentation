# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Red Hat Inc.
# This file is distributed under the same license as the Automation Controller API Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Automation Controller API Guide 4.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-10 17:06+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/filtering.rst:3
msgid "Filtering"
msgstr "フィルタリング"

#: ../../source/filtering.rst:9
msgid "Any collection is what the system calls a \"queryset\" and can be filtered via various operators."
msgstr "コレクションとは、システムが \"queryset\" と呼ぶもので、各種演算子を使用してフィルタリングすることができます。"

#: ../../source/filtering.rst:11
msgid "For example, to find the groups that contain the name \"foo\":"
msgstr "例えば、名前に \"foo\" が含まれるグループを検索するには、以下を使用します。"

#: ../../source/filtering.rst:17
msgid "To find an exact match:"
msgstr "完全に一致するグループを検索するには、以下を使用します。"

#: ../../source/filtering.rst:23
msgid "If a resource is of an integer type, you must add ``\\_\\_int`` to the end to cast your string input value to an integer, like so:"
msgstr "リソースが整数型である場合は、以下のように ``\\_\\_int`` を末尾に追加して文字列入力値を整数に変換する必要があります。"

#: ../../source/filtering.rst:29
msgid "Related resources can also be queried, like so:"
msgstr "また、関連リソースも以下のようにクエリーすることができます。"

#: ../../source/filtering.rst:35
msgid "This will return all users with names that include the string \"Kim\" in them."
msgstr "これで名前に \"Kim\" という文字列が含まれるユーザーすべてが返されます。"

#: ../../source/filtering.rst:37
msgid "You can also filter against multiple fields at once:"
msgstr "複数のフィールドに対して一度にフィルタリングを実行することもできます。"

#: ../../source/filtering.rst:43
msgid "This finds all groups containing the name \"test\" that has no active failures."
msgstr "この場合は、名前に \"test\" が含まれており、現在障害が発生していないグループがすべて返されます。"

#: ../../source/filtering.rst:45
msgid "For more about what types of operators are available, refer to: https://docs.djangoproject.com/en/dev/ref/models/querysets/"
msgstr "利用可能な演算子の詳細情報は、https://docs.djangoproject.com/en/dev/ref/models/querysets/ を参照してください。"

#: ../../source/filtering.rst:50
msgid "You can also watch the API as the UI is being used to see how it is filtering on various criteria."
msgstr "UI を使って各基準に対してフィルタリングを実行している際に、API を確認することもできます。"

#: ../../source/filtering.rst:55
msgid "Any additional query string parameters may be used to filter the list of results returned to those matching a given value. Only fields and relations that exist in the database may be used for filtering. Any special characters in the specified value should be url-encoded. For example:"
msgstr "特定の値に一致する結果一覧に対して、追加のクエリー文字列パラメーターを使ってフィルタリングすることもできます。このフィルタリングに使用できるのは、データベースに存在するフィールドと関係のみです。指定された値の特殊文字は、エンコードされた url にする必要があります。例を示します。"

#: ../../source/filtering.rst:61
msgid "Fields may also span relations, only for fields and relationships defined in the database:"
msgstr "フィールドは関係にまで及ぶ可能性がありますが、その場合はデータベースで定義されたフィールドと関係に限定されます。"

#: ../../source/filtering.rst:67
msgid "To exclude results matching certain criteria, prefix the field parameter with ``not__``:"
msgstr "特定の基準に一致する結果を除外するには、フィールドパラメーターの前に ``not__`` を追加します。"

#: ../../source/filtering.rst:73
msgid "By default, all query string filters are AND'ed together, so only the results matching all filters will be returned. To combine results matching any one of multiple criteria, prefix each query string parameter with ``or__``:"
msgstr "デフォルトでは、クエリー文字列フィルターはすべて AND 条件になっているため、全フィルターに一致する結果のみが返されます。複数基準のいずれかに一致する結果にまとめるには、各クエリー文字列パラメーターの前に ``or__`` を追加します。"

#: ../../source/filtering.rst:80
msgid "The default AND filtering applies all filters simultaneously to each related object being filtered across database relationships. The chain filter instead applies filters separately for each related object. To use, prefix the query string parameter with ``chain__``:"
msgstr "デフォルトの AND 条件のフィルター設定では、データベース関係全体でフィルターが設定されている各関連オブジェクトに同時に全フィルターが適用されます。チェーンフィルター (chain) では、フィルターを個別に関連オブジェクトごとに適用します。これを使用するには、``chain__`` をクエリー文字列パラメーターの前に追加します。"

#: ../../source/filtering.rst:87
msgid "If the first query above were written as ``?related__field=value&related__field2=othervalue``, it would return only the primary objects where the same related object satisfied both conditions. As written using the chain filter, it would return the intersection of primary objects matching each condition."
msgstr "上記で最初のクエリーが ``?related__field=value&related__field2=othervalue`` となっていれば、同一の関連オブジェクトが両方の条件を満たしているプライマリーオブジェクトのみが返されますが、上記通りのチェーンフィルターを使用すると、各条件に一致するプライマリーオブジェクトの共通集合が返されます。"

#: ../../source/filtering.rst:89
msgid "Field lookups may also be used for more advanced queries, by appending the lookup to the field name:"
msgstr "フィールド名に lookup を追加すると、より詳細なクエリーによるフィールドルックアップが可能になります。"

#: ../../source/filtering.rst:95
msgid "The following field lookups are supported:"
msgstr "以下のフィールドのルックアップがサポートされています。"

#: ../../source/filtering.rst:97
msgid "``exact``: Exact match (default lookup if not specified)."
msgstr "``exact``: 完全一致 (指定されない場合のデフォルトのルックアップ)"

#: ../../source/filtering.rst:98
msgid "``iexact``: Case-insensitive version of exact."
msgstr "``iexact``: 大文字小文字の区別のない exact"

#: ../../source/filtering.rst:99
msgid "``contains``: Field contains value."
msgstr "``contains``: フィールドに値を含む"

#: ../../source/filtering.rst:100
msgid "``icontains``: Case-insensitive version of contains."
msgstr "``icontains``: 大文字小文字の区別のない contains"

#: ../../source/filtering.rst:101
msgid "``startswith``: Field starts with value."
msgstr "``startswith``: 値で始まるフィールド"

#: ../../source/filtering.rst:102
msgid "``istartswith``: Case-insensitive version of startswith."
msgstr "``istartswith``: startswith で大文字小文字の区別なし"

#: ../../source/filtering.rst:103
msgid "``endswith``: Field ends with value."
msgstr "``endswith``: 値で終わるフィールド"

#: ../../source/filtering.rst:104
msgid "``iendswith``: Case-insensitive version of endswith."
msgstr "``iendswith``: 大文字小文字の区別のない exact"

#: ../../source/filtering.rst:105
msgid "``regex``: Field matches the given regular expression."
msgstr "``regex``: 特定の正規表現に一致するフィールド"

#: ../../source/filtering.rst:106
msgid "``iregex``: Case-insensitive version of regex."
msgstr "``iregex``: 大文字小文字の区別のない regex"

#: ../../source/filtering.rst:107
msgid "``gt``: Greater than comparison."
msgstr "``gt``: Greater than の比較条件"

#: ../../source/filtering.rst:108
msgid "``gte``: Greater than or equal to comparison."
msgstr "``gte``: Greater than or equal to の比較条件"

#: ../../source/filtering.rst:109
msgid "``lt``: Less than comparison."
msgstr "``lt``: Less than の比較条件"

#: ../../source/filtering.rst:110
msgid "``lte``: Less than or equal to comparison."
msgstr "``lte``: Less than or equal to の比較条件"

#: ../../source/filtering.rst:111
msgid "``isnull``: Check whether the given field or related object is null; expects a boolean value."
msgstr "``isnull``: 特定フィールドもしくは関連オブジェクトが null かどうかをチェック。ブール値を想定"

#: ../../source/filtering.rst:112
msgid "``in``: Check whether the given field's value is present in the list provided; expects a list of items."
msgstr "``in``: 特定フィールドの値が提供されたリストに存在するかどうかをチェック。アイテムのリストを想定"

#: ../../source/filtering.rst:113
msgid "Boolean values may be specified as ``True`` or ``1`` for true, ``False`` or ``0`` for false (both case-insensitive)."
msgstr "ブール値は true の場合 ``True`` または ``1`` を、false の場合は ``False`` または ``0`` を指定します (どちらも大文字小文字の区別なし)。"

#: ../../source/filtering.rst:115
msgid "For example, ``?created__gte=2020-01-01`` will provide a list of items created after 1/1/2020."
msgstr "たとえば、``?created__gte=2020-01-01`` は 2020 年 1 月 1 日 の後に作成されたアイテムの一覧を提供します。"

#: ../../source/filtering.rst:117
msgid "Null values may be specified as ``None`` or ``Null`` (both case-insensitive), though it is preferred to use the ``isnull`` lookup to explicitly check for null values."
msgstr "Null 値は ``None`` または ``Null`` (どちらも大文字小文字の区別なし) を指定できますが、``isnull`` ルックアップを使用して明示的に null 値をチェックすることが推奨されます。"

#: ../../source/filtering.rst:119
msgid "Lists (for the ``in`` lookup) may be specified as a comma-separated list of values."
msgstr "``in`` ルックアップのリストは、値をコンマ区切りのリストとして指定することができます。"

#: ../../source/filtering.rst:121
msgid "Filtering based on the requesting user's level of access by query string parameter (added in |at| 3.1):"
msgstr "クエリー文字列のパラメーターによるユーザーのアクセスレベルの要求をもとにしたフィルタリング (|at| 3.1 で追加)。"

#: ../../source/filtering.rst:123
msgid "``role_level``: Level of role to filter on, such as ``admin_role``"
msgstr "``role_level``: フィルターをかけるロールのレベル。例: ``admin_role``"
